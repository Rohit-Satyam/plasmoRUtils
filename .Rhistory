utils::URLencode('],"includeHeader":true,"attachmentType":"plain"}')))
}
}
temp <- getSharedOlogs
temp <- getSharedOlogs()
View(temp)
temp <- getSharedOlogs(customFields = c("primary_key","target_id","group_name"))
View(temp)
.retainIDs <- function(ids_str,regex,delim) {
# 1. Split the semicolon-separated string into a character vector
ids <- stringr::str_split(ids_str, delim, simplify = TRUE)
# 2. Keep only those matching the regex
keep <- ids[stringr::str_detect(ids, regex)]
# 3. Collapse back into a single string
stringr::str_c(keep, collapse = delim)
}
.retainIDs(temp$Accession,"PF3D7","|")
.retainIDs(temp$Accession,"PF3D7","[|]")
.retainIDs(temp$Accession,"PF3D7",'[|]')
.retainIDs(temp$Accession,"PF3D7_",'pfal|')
.retainIDs(temp$Accession,"PF3D7_",'[pfal|]')
stringr::str_split(temp$Accession, "|", simplify = TRUE)
stringr::str_split(temp$Accession, "[|]", simplify = TRUE)
ids <- stringr::str_split(temp$Accession, "[|]", simplify = TRUE)
ids[stringr::str_detect(ids, "PF3D7")]
colnames(temp)
getSharedOlogs <- function(from=1742855,to=1747281,customFields=NULL){
if(is.null(customFields)){
readr::read_tsv(paste0("https://orthomcl.org/orthomcl/service/record-types/sequence/searches/BySharedOrtholog/reports/attributesTabular?query_organism_type_ahead=",
from,
"&target_organism_type_ahead=",
to,
utils::URLencode('&reportConfig={"attributes":["primary_key","target_id"],"includeHeader":true,"attachmentType":"plain"}')))
} else {
encodeit <- paste0("%22", customFields, "%22", collapse = ",")
readr::read_tsv(paste0("https://orthomcl.org/orthomcl/service/record-types/sequence/searches/BySharedOrtholog/reports/attributesTabular?query_organism_type_ahead=",
from,
"&target_organism_type_ahead=",
to,utils::URLencode('&reportConfig={"attributes":['),
encodeit,
utils::URLencode('],"includeHeader":true,"attachmentType":"plain"}')))
} %>% tidyr::separate_rows(`Target ID`,",")
}
temp <- getSharedOlogs(customFields = c("primary_key","target_id","group_name"))
?tidyr::separate_rows
getSharedOlogs <- function(from=1742855,to=1747281,customFields=NULL){
if(is.null(customFields)){
readr::read_tsv(paste0("https://orthomcl.org/orthomcl/service/record-types/sequence/searches/BySharedOrtholog/reports/attributesTabular?query_organism_type_ahead=",
from,
"&target_organism_type_ahead=",
to,
utils::URLencode('&reportConfig={"attributes":["primary_key","target_id"],"includeHeader":true,"attachmentType":"plain"}')))
} else {
encodeit <- paste0("%22", customFields, "%22", collapse = ",")
readr::read_tsv(paste0("https://orthomcl.org/orthomcl/service/record-types/sequence/searches/BySharedOrtholog/reports/attributesTabular?query_organism_type_ahead=",
from,
"&target_organism_type_ahead=",
to,utils::URLencode('&reportConfig={"attributes":['),
encodeit,
utils::URLencode('],"includeHeader":true,"attachmentType":"plain"}')))
} %>% tidyr::separate_rows(.,`Target ID`,sep=",")
}
temp <- getSharedOlogs(customFields = c("primary_key","target_id","group_name"))
View(temp)
getSharedOlogs <- function(from=1742855,to=1747281,customFields=NULL, separaterows=TRUE){
if(is.null(customFields)){
df <- readr::read_tsv(paste0("https://orthomcl.org/orthomcl/service/record-types/sequence/searches/BySharedOrtholog/reports/attributesTabular?query_organism_type_ahead=",
from,
"&target_organism_type_ahead=",
to,
utils::URLencode('&reportConfig={"attributes":["primary_key","target_id"],"includeHeader":true,"attachmentType":"plain"}')), progress = FALSE,show_col_types = FALSE )
} else {
encodeit <- paste0("%22", customFields, "%22", collapse = ",")
df <- readr::read_tsv(paste0("https://orthomcl.org/orthomcl/service/record-types/sequence/searches/BySharedOrtholog/reports/attributesTabular?query_organism_type_ahead=",
from,
"&target_organism_type_ahead=",
to,utils::URLencode('&reportConfig={"attributes":['),
encodeit,
utils::URLencode('],"includeHeader":true,"attachmentType":"plain"}')),progress = FALSE,show_col_types = FALSE,)
}
ifelse(isTRUE(separaterows),df%>% tidyr::separate_rows(.,`Target ID`,sep=","),df)
}
temp <- getSharedOlogs(customFields = c("primary_key","target_id","group_name"))
View(temp)
temp[[1]]
df <- readr::read_tsv(paste0("https://orthomcl.org/orthomcl/service/record-types/sequence/searches/BySharedOrtholog/reports/attributesTabular?query_organism_type_ahead=",
from,
"&target_organism_type_ahead=",
to,
utils::URLencode('&reportConfig={"attributes":["primary_key","target_id"],"includeHeader":true,"attachmentType":"plain"}')), progress = FALSE,show_col_types = FALSE )
View(df)
separaterows=TRUE
ifelse(isTRUE(separaterows),
df%>% tidyr::separate_rows(.,`Target ID`,sep=","),
df)
df%>% tidyr::separate_rows(.,`Target ID`,sep=",")
df <- df%>% tidyr::separate_rows(.,`Target ID`,sep=",")
df <- ifelse(isTRUE(separaterows),
df%>% tidyr::separate_rows(.,`Target ID`,sep=","),
df)
}
getSharedOlogs <- function(from=1742855,to=1747281,customFields=NULL, separaterows=TRUE){
getSharedOlogs <- function(from=1742855,to=1747281,customFields=NULL, separaterows=TRUE){
if(is.null(customFields)){
df <- readr::read_tsv(paste0("https://orthomcl.org/orthomcl/service/record-types/sequence/searches/BySharedOrtholog/reports/attributesTabular?query_organism_type_ahead=",
from,
"&target_organism_type_ahead=",
to,
utils::URLencode('&reportConfig={"attributes":["primary_key","target_id"],"includeHeader":true,"attachmentType":"plain"}')), progress = FALSE,show_col_types = FALSE )
} else {
encodeit <- paste0("%22", customFields, "%22", collapse = ",")
df <- readr::read_tsv(paste0("https://orthomcl.org/orthomcl/service/record-types/sequence/searches/BySharedOrtholog/reports/attributesTabular?query_organism_type_ahead=",
from,
"&target_organism_type_ahead=",
to,utils::URLencode('&reportConfig={"attributes":['),
encodeit,
utils::URLencode('],"includeHeader":true,"attachmentType":"plain"}')),progress = FALSE,show_col_types = FALSE)
}
if(isTRUE(separaterows)){
df%>% tidyr::separate_rows(.,`Target ID`,sep=",")
} else {
df}
}
temp <- getSharedOlogs(customFields = c("primary_key","target_id","group_name"))
temp <- getSharedOlogs(customFields = c("primary_key","target_id","group_name"),separaterows = F)
json_data$searchData$dynamicAttributes
library(MotifDb)
BiocManager::install("MotifDb")
library(MotifDb)
motifs<-query(MotifDb, "pfalciparum")
motifs@elementMetadata
df <- getPreconfiguredTable(org = "Plasmodium falciparum 3D7",
db = "plasmodb",customField = "OrthologsLite")
}
View(df)
?plotDomain
plot <- plotDomain(geneID = c("PF3D7_0518900", "PF3D7_0602800", "PF3D7_0624600"))
plot
library(plasmoRUtils)
View(searchHP)
setwd("C:/Users/rohit_satyam/Downloads/plasmoRUtils")
searchHP <- function(geneID, uniprotToGID=TRUE) {
url <- glue::glue("http://www.hitpredict.org/proteins.php?Value={geneID}&Species=0")
webpage <- rvest::read_html(url)
htp_link <- webpage %>%
rvest::html_nodes("a") %>%
rvest::html_attr("href") %>%
stringr::str_subset("./htp_int") %>%
unique()
if (length(htp_link)!=0) {
alldf <- purrr::map(htp_link, function(x){
url <- paste0("http://www.hitpredict.org/", stringr::str_replace(x, "./htp_int", "htp_int_txt"))
skip_lines_start <- 3
skip_lines_end <- 1
total_lines <- readr::read_lines(url) %>% length()
nrows <- total_lines - skip_lines_start - skip_lines_end - 1
message(glue::glue("\033[0;32mPPI found for: {geneID}\033[0m\n"))
data <- utils::read.table(url, header = TRUE, sep = "\t", skip = skip_lines_start, nrows = nrows) %>%
dplyr::mutate(QueryID = geneID)
})
data <- dplyr::bind_rows(alldf)
if (uniprotToGID) {
pfa_ensembl <- biomaRt::useEnsemblGenomes(biomart = "protists_mart", dataset = "pfalciparum_eg_gene")
converted <- biomaRt::getBM(attributes = c("uniprotsptrembl", "ensembl_gene_id"),
filters = "uniprotsptrembl",
values = data$Interactor,
mart = pfa_ensembl)
data <- S4Vectors::merge(data,converted, all.x=TRUE, by.x="Interactor", by.y="uniprotsptrembl")
}
return(data)
} else {
message("No interaction found in HitPredict Database")
}
}
searchHP("PF3D7_0418300", uniprotToGID = FALSE) %>% head()
searchHP("PF3D7_0418300", uniprotToGID = T) %>% head()
View(searchIpDb)
url <- "https://inparanoidb.sbc.su.se/species/36329&5823&1&Protein"
temp <- rvest::read_html(url)
View(temp)
df <- webpage %>% rvest::html_nodes("table") %>%
rvest::html_table(fill = TRUE) %>% plyr::ldply(.)
df <- temp %>% rvest::html_nodes("table") %>%
rvest::html_table(fill = TRUE) %>% plyr::ldply(.)
View(df)
url <- "https://inparanoidb.sbc.su.se/download/sqltable/36329&5823&prot"
temp <- readr::read_tsv(url)
View(temp)
searchKipho(org="pf",type = "kinase")
tt <- searchKipho(org="pf",type = "kinase")
View(tt)
url <- "https://bioinfo.icgeb.res.in/PtDB/htmls/TR.html"
webpage <- rvest::read_html(url)
table <- webpage %>%
rvest::html_nodes("table") %>%
rvest::html_table(fill = TRUE) %>%
.[[1]]
View(table)
View(table)
table <- webpage %>%
rvest::html_nodes("table") %>%
rvest::html_table(fill = TRUE) %>%
.[[1]] %>%
dplyr::filter(!apply(., 1, function(row) all(row == ""))) %>%
dplyr::filter(!stringr::str_detect(`Gene ID`, "Gene ID"))
table <- webpage %>%
rvest::html_nodes("table") %>%
rvest::html_table(fill = TRUE) %>%
.[[1]] %>%
dplyr::filter(!stringr::str_detect(`Gene ID`, "Gene ID"))
colnames(table)
table <- webpage %>%
rvest::html_nodes("table") %>%
rvest::html_table(fill = TRUE) %>%
.[[1]] %>%
dplyr::filter(!stringr::str_detect(`Gene-ID`, "Gene ID"))
table <- webpage %>%
rvest::html_nodes("table") %>%
rvest::html_table(fill = TRUE) %>%
.[[1]] %>%
dplyr::filter(!stringr::str_detect("Gene-ID", "Gene ID"))
table(table$`Gene-ID`)
stringr::str_detect(table$Gene-ID, "Gene ID")
stringr::str_detect(table$`Gene-ID`, "Gene ID")
stringr::str_detect(!table$Gene-ID, "Gene ID")
!(stringr::str_detect(table$`Gene-ID`, "Gene ID"))
table[!(stringr::str_detect(table$`Gene-ID`, "Gene ID")),]
table <- webpage %>%
rvest::html_nodes("table") %>%
rvest::html_table(fill = TRUE) %>%
.[[1]] %>%
.[!(stringr::str_detect(table$`Gene-ID`, "Gene ID")),]
View(table)
table <- webpage %>%
rvest::html_nodes("table") %>%
rvest::html_table(fill = TRUE) %>%
.[[1]] %>%
dplyr::filter(!stringr::str_detect("Gene-ID", "Gene ID")) %>% dplyr::select(-Literature)
table <- webpage %>%
rvest::html_nodes("table") %>%
rvest::html_table(fill = TRUE) %>%
.[[1]] %>%
dplyr::select(-Literature)
table <- webpage %>%
rvest::html_nodes("table") %>%
rvest::html_table(fill = TRUE) %>%
.[[1]] %>% .[,-ncol(.)]
url <- "https://bioinfo.icgeb.res.in/PtDB/htmls/CRR.html"
table <- webpage %>%
rvest::html_nodes("table") %>%
rvest::html_table(fill = TRUE) %>%
.[[1]] %>%
.[!(stringr::str_detect(table$`Gene-ID`, "Gene ID")),] %>% .[,-ncol(.)]
View(table)
View(getTable())
View(getTable)
View(listVeupathdb)
url <- "https://bioinfo.icgeb.res.in/PtDB/htmls/exp_new.html"
table <- webpage %>%
rvest::html_nodes("table") %>%
rvest::html_table(fill = TRUE) %>%
.[[1]] %>%
.[!(stringr::str_detect(table$`Gene-ID`, "Gene ID")),] %>% .[,-ncol(.)]
table <- webpage %>%
rvest::html_nodes("table") %>%
rvest::html_table(fill = TRUE) %>%
.[[1]] %>%
.[!(stringr::str_detect(table$`Gene-ID`, "Gene_ID")),] %>% .[,-ncol(.)]
table <- webpage %>%
rvest::html_nodes("table") %>%
rvest::html_table(fill = TRUE) %>%
.[[1]] %>%
.[!(stringr::str_detect(table$`Gene_ID`, "Gene_ID")),] %>% .[,-ncol(.)]
table <- webpage %>%
rvest::html_nodes("table") %>%
rvest::html_table(fill = TRUE) %>%
.[[1]]
View(table)
table <- webpage %>%
rvest::html_nodes("table") %>%
rvest::html_table(fill = TRUE) %>%
.[[1]] %>%
.[!(stringr::str_detect(table$`Gene-ID`, "Gene ID")),] %>% .[,-ncol(.)]
url <- "https://bioinfo.icgeb.res.in/PtDB/htmls/exp_new.html"
table <- webpage %>%
rvest::html_nodes("table") %>%
rvest::html_table(fill = TRUE) %>%
.[[1]] %>%
.[!(stringr::str_detect(table$`Gene_ID`, "Gene_ID")),] %>% .[,-ncol(.)]
url <- "https://bioinfo.icgeb.res.in/PtDB/htmls/exp_new.html"
table <- webpage %>%
rvest::html_nodes("table") %>%
rvest::html_table(fill = TRUE) %>%
.[[1]] %>%
.[!(stringr::str_detect(table$`Gene_ID`, "Gene_ID")),] %>% .[,-ncol(.)]
webpage %>%
rvest::html_nodes("table") %>%
rvest::html_table(fill = TRUE) %>%
.[[1]] %>%
colnames()
table <- webpage %>%
rvest::html_nodes("table") %>%
rvest::html_table(fill = TRUE) %>%
.[[1]] %>%
.[!(stringr::str_detect(table$`Gene-ID`, "Gene ID")),] %>% .[,-ncol(.)]
table <- webpage %>%
rvest::html_nodes("table") %>%
rvest::html_table(fill = TRUE) %>%
.[[1]] %>%
.[!(stringr::str_detect(.$`Gene_ID`, "Gene_ID")),] %>% .[,-ncol(.)]
rm(table)
webpage %>%
rvest::html_nodes("table") %>%
rvest::html_table(fill = TRUE) %>%
.[[1]]
webpage %>%
rvest::html_nodes("table") %>%
rvest::html_table(fill = TRUE) %>%
.[[1]] %>% .[,-ncol(.)]
webpage %>%
rvest::html_nodes("table") %>%
rvest::html_table(fill = TRUE) %>%
.[[1]] %>%
.[!(stringr::str_detect(.$`Gene-ID`, "Gene ID")),] %>% .[,-ncol(.)]
searchApicoTFdb <- function(org="pf",fetch="all"){
urls <- list(
pb = "https://bioinfo.icgeb.res.in/PtDB/htmls/berghii_new.html",
pv = "https://bioinfo.icgeb.res.in/PtDB/htmls/vivax_new.html",
pf = "https://bioinfo.icgeb.res.in/PtDB/htmls/pfal_new.html",
pk = "https://bioinfo.icgeb.res.in/PtDB/htmls/knw_new.html",
pc = "https://bioinfo.icgeb.res.in/PtDB/htmls/chas_new.html",
py = "https://bioinfo.icgeb.res.in/PtDB/htmls/yoelii_new.html",
tg49 = "https://bioinfo.icgeb.res.in/PtDB/htmls/t_gondii_49.html",
tg89 = "https://bioinfo.icgeb.res.in/PtDB/htmls/t_gondii_new_89.html",
cp = "https://bioinfo.icgeb.res.in/PtDB/htmls/c_parvum_new.html",
em = "https://bioinfo.icgeb.res.in/PtDB/htmls/eimeria_maxima.html",
bb = "https://bioinfo.icgeb.res.in/PtDB/htmls/babaesia.html",
et = "https://bioinfo.icgeb.res.in/PtDB/htmls/emeria_tellena.html",
nu = "https://bioinfo.icgeb.res.in/PtDB/htmls/neurospora.html",
cy = "https://bioinfo.icgeb.res.in/PtDB/htmls/cyclospora.html"
)
if(fetch=="all"){
url <- urls[[org]]
webpage <- rvest::read_html(url)
table <- webpage %>%
rvest::html_nodes("table") %>%
rvest::html_table(fill = TRUE) %>%
.[[1]] %>%
dplyr::filter(!apply(., 1, function(row) all(row == ""))) %>%
dplyr::filter(!stringr::str_detect(`Gene ID`, "Gene ID"))
return(table)
} else if(fetch=="trrs"){
url <- "https://bioinfo.icgeb.res.in/PtDB/htmls/TR.html"
table <- webpage %>%
rvest::html_nodes("table") %>%
rvest::html_table(fill = TRUE) %>%
.[[1]] %>%
.[!(stringr::str_detect(.$`Gene-ID`, "Gene ID")),] %>% .[,-ncol(.)]
return(table)
} else if(fetch=="crrs"){
url <- "https://bioinfo.icgeb.res.in/PtDB/htmls/CRR.html"
table <- webpage %>%
rvest::html_nodes("table") %>%
rvest::html_table(fill = TRUE) %>%
.[[1]] %>%
.[!(stringr::str_detect(.$`Gene-ID`, "Gene ID")),] %>% .[,-ncol(.)]
return(table)
} else if(fetch=="rnaregs"){
url <- "https://bioinfo.icgeb.res.in/PtDB/htmls/RNA.1.html"
table <- webpage %>%
rvest::html_nodes("table") %>%
rvest::html_table(fill = TRUE) %>%
.[[1]] %>%
.[!(stringr::str_detect(.$`Gene-ID`, "Gene ID")),] %>% .[,-ncol(.)]
return(table)
} else if(fetch=="exptfs"){
url <- "https://bioinfo.icgeb.res.in/PtDB/htmls/exp_new.html"
table <- webpage %>%
rvest::html_nodes("table") %>%
rvest::html_table(fill = TRUE) %>%
.[[1]] %>%
.[!(stringr::str_detect(.$`Gene-ID`, "Gene ID")),] %>% .[,-ncol(.)]
return(table)
}
}
temp <- searchApicoTFdb()
View(temp)
temp <- searchApicoTFdb(fetch = "all")
temp <- searchApicoTFdb(fetch = "crrs")
temp <- searchApicoTFdb(fetch = "exptfs")
View(temp)
searchApicoTFdb <- function(org="pf",fetch="all"){
urls <- list(
pb = "https://bioinfo.icgeb.res.in/PtDB/htmls/berghii_new.html",
pv = "https://bioinfo.icgeb.res.in/PtDB/htmls/vivax_new.html",
pf = "https://bioinfo.icgeb.res.in/PtDB/htmls/pfal_new.html",
pk = "https://bioinfo.icgeb.res.in/PtDB/htmls/knw_new.html",
pc = "https://bioinfo.icgeb.res.in/PtDB/htmls/chas_new.html",
py = "https://bioinfo.icgeb.res.in/PtDB/htmls/yoelii_new.html",
tg49 = "https://bioinfo.icgeb.res.in/PtDB/htmls/t_gondii_49.html",
tg89 = "https://bioinfo.icgeb.res.in/PtDB/htmls/t_gondii_new_89.html",
cp = "https://bioinfo.icgeb.res.in/PtDB/htmls/c_parvum_new.html",
em = "https://bioinfo.icgeb.res.in/PtDB/htmls/eimeria_maxima.html",
bb = "https://bioinfo.icgeb.res.in/PtDB/htmls/babaesia.html",
et = "https://bioinfo.icgeb.res.in/PtDB/htmls/emeria_tellena.html",
nu = "https://bioinfo.icgeb.res.in/PtDB/htmls/neurospora.html",
cy = "https://bioinfo.icgeb.res.in/PtDB/htmls/cyclospora.html"
)
if(fetch=="all"){
url <- urls[[org]]
webpage <- rvest::read_html(url)
table <- webpage %>%
rvest::html_nodes("table") %>%
rvest::html_table(fill = TRUE) %>%
.[[1]] %>%
dplyr::filter(!apply(., 1, function(row) all(row == ""))) %>%
dplyr::filter(!stringr::str_detect(`Gene ID`, "Gene ID"))
return(table)
} else if(fetch=="trrs"){
url <- "https://bioinfo.icgeb.res.in/PtDB/htmls/TR.html"
webpage <- rvest::read_html(url)
table <- webpage %>%
rvest::html_nodes("table") %>%
rvest::html_table(fill = TRUE) %>%
.[[1]] %>%
.[!(stringr::str_detect(.$`Gene-ID`, "Gene ID")),] %>% .[,-ncol(.)]
return(table)
} else if(fetch=="crrs"){
url <- "https://bioinfo.icgeb.res.in/PtDB/htmls/CRR.html"
webpage <- rvest::read_html(url)
table <- webpage %>%
rvest::html_nodes("table") %>%
rvest::html_table(fill = TRUE) %>%
.[[1]] %>%
.[!(stringr::str_detect(.$`Gene-ID`, "Gene ID")),] %>% .[,-ncol(.)]
return(table)
} else if(fetch=="rnaregs"){
url <- "https://bioinfo.icgeb.res.in/PtDB/htmls/RNA.1.html"
webpage <- rvest::read_html(url)
table <- webpage %>%
rvest::html_nodes("table") %>%
rvest::html_table(fill = TRUE) %>%
.[[1]] %>%
.[!(stringr::str_detect(.$`Gene-ID`, "Gene ID")),] %>% .[,-ncol(.)]
return(table)
} else if(fetch=="exptfs"){
url <- "https://bioinfo.icgeb.res.in/PtDB/htmls/exp_new.html"
webpage <- rvest::read_html(url)
table <- webpage %>%
rvest::html_nodes("table") %>%
rvest::html_table(fill = TRUE) %>%
.[[1]] %>%
.[!(stringr::str_detect(.$`Gene-ID`, "Gene ID")),] %>% .[,-ncol(.)]
return(table)
}
}
temp <- searchApicoTFdb(fetch = "exptfs")
url <- "https://bioinfo.icgeb.res.in/PtDB/htmls/exp_new.html"
webpage <- rvest::read_html(url)
webpage %>%
rvest::html_nodes("table") %>%
rvest::html_table(fill = TRUE) %>%
.[[1]]
webpage %>%
rvest::html_nodes("table") %>%
rvest::html_table(fill = TRUE) %>%
.[[1]] webpage %>%
url <- "https://bioinfo.icgeb.res.in/PtDB/htmls/exp_new.html"
webpage <- rvest::read_html(url)
webpage %>%
rvest::html_nodes("table") %>%
rvest::html_table(fill = TRUE) %>%
.[[1]] %>%
.[!(stringr::str_detect(.$`Gene_ID`, "Gene_ID")),] %>% .[,-ncol(.)]
webpage %>%
rvest::html_nodes("table") %>%
rvest::html_table(fill = TRUE) %>%
.[[1]] %>%
.[!(stringr::str_detect(.$`Gene_ID`, "Gene_ID")),]
url <- "https://bioinfo.icgeb.res.in/PtDB/htmls/RNA.1.html"
webpage <- rvest::read_html(url)
webpage %>%
rvest::html_nodes("table") %>%
rvest::html_table(fill = TRUE) %>%
.[[1]]
webpage %>%
rvest::html_nodes("table") %>%
rvest::html_table(fill = TRUE) %>%
.[[1]] %>%
.[!(stringr::str_detect(.$`Gene-ID`, "Gene ID")),] %>% .[,-ncol(.)]
url <- "https://bioinfo.icgeb.res.in/PtDB/htmls/CRR.html"
webpage <- rvest::read_html(url)
table <- webpage %>%
rvest::html_nodes("table") %>%
rvest::html_table(fill = TRUE) %>%
.[[1]] %>%
.[!(stringr::str_detect(.$`Gene-ID`, "Gene ID")),] %>% .[,-ncol(.)]
View(table)
url <- "https://bioinfo.icgeb.res.in/PtDB/htmls/TR.html"
webpage <- rvest::read_html(url)
table <- webpage %>%
rvest::html_nodes("table") %>%
rvest::html_table(fill = TRUE) %>%
.[[1]] %>%
.[!(stringr::str_detect(.$`Gene-ID`, "Gene ID")),] %>% .[,-ncol(.)]
View(table)
source("C:/Users/rohit_satyam/Downloads/plasmoRUtils/R/searchApicoTFdb.R")
?searchApicoTFdb
library(BioNERO)
?exp2gcn
styler::style_file()
styler:::style_active_file()
